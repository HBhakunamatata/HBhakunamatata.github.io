I"	2<p>Three methods to implement AOP (Aspect-oriented programming)</p>

<h2 id="before-using">Before using</h2>

<ul>
  <li>(1) Provide the <em>Rent</em> interface</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">UserServlet</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">delete</span><span class="o">();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">search</span><span class="o">();</span>

<span class="o">}</span>
</code></pre></div></div>
<p>(2) add maven dependency</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
   <span class="nt">&lt;groupId&gt;</span>org.aspectj<span class="nt">&lt;/groupId&gt;</span>
   <span class="nt">&lt;artifactId&gt;</span>aspectjweaver<span class="nt">&lt;/artifactId&gt;</span>
   <span class="nt">&lt;version&gt;</span>1.9.4<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<p>(3) add xml binding</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;beans</span> <span class="na">xmlns=</span><span class="s">"http://www.springframework.org/schema/beans"</span>
       <span class="na">xmlns:aop=</span><span class="s">"http://www.springframework.org/schema/aop"</span>    <span class="err">//</span> <span class="err">added</span>
    <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">"http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop              // added 
        https://www.springframework.org/schema/aop/spring-aop.xsd"</span><span class="nt">&gt;</span>  // added

<span class="nt">&lt;/beans&gt;</span>
</code></pre></div></div>

<h2 id="method01--implement-the-interface-in-aop">Method01 : implement the interface in aop</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogBefore</span> <span class="kd">implements</span> <span class="nc">MethodBeforeAdvice</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">before</span><span class="o">(</span><span class="nc">Method</span> <span class="n">method</span><span class="o">,</span> <span class="nc">Object</span><span class="o">[]</span> <span class="n">args</span><span class="o">,</span> <span class="nc">Object</span> <span class="n">target</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Throwable</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span>
                <span class="s">"的"</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">"方法被执行了"</span>
                <span class="o">+</span> <span class="s">"函数的参数为"</span> <span class="o">+</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogAfter</span> <span class="kd">implements</span> <span class="nc">AfterReturningAdvice</span> <span class="o">{</span>
    <span class="c1">// 把源码下载下来看参数说明</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterReturning</span><span class="o">(</span><span class="nc">Object</span> <span class="n">returnValue</span><span class="o">,</span> <span class="nc">Method</span> <span class="n">method</span><span class="o">,</span> <span class="nc">Object</span><span class="o">[]</span> <span class="n">args</span><span class="o">,</span> <span class="nc">Object</span> <span class="n">target</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Throwable</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"执行了"</span> <span class="o">+</span> <span class="n">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">()</span>
                <span class="o">+</span><span class="s">"的"</span><span class="o">+</span><span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"方法,"</span>
                <span class="o">+</span><span class="s">"返回值："</span><span class="o">+</span><span class="n">returnValue</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--  method 01  --&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_1.ServletImpl01"</span> <span class="na">id=</span><span class="s">"servletImpl01"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_1.LogBefore"</span> <span class="na">id=</span><span class="s">"logBefore"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_1.LogAfter"</span> <span class="na">id=</span><span class="s">"logAfter"</span><span class="nt">/&gt;</span>

<span class="nt">&lt;aop:config&gt;</span>
    <span class="nt">&lt;aop:pointcut</span> <span class="na">id=</span><span class="s">"myPointCut01"</span> <span class="na">expression=</span><span class="s">"execution(* com.HB.servlet.method_1.ServletImpl01.*(..))"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;aop:advisor</span> <span class="na">advice-ref=</span><span class="s">"logBefore"</span> <span class="na">pointcut-ref=</span><span class="s">"myPointCut01"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;aop:advisor</span> <span class="na">advice-ref=</span><span class="s">"logAfter"</span> <span class="na">pointcut-ref=</span><span class="s">"myPointCut01"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/aop:config&gt;</span>
</code></pre></div></div>

<h2 id="method02--diy-mycutpoint">Method02 : DIY MyCutPoint</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyPointCut</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">logBefore02</span> <span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Log Before ..."</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">logAfter02</span> <span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Log after ..."</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--  method 02  --&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_2.ServletImpl02"</span> <span class="na">id=</span><span class="s">"servletImpl02"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_2.MyPointCut"</span> <span class="na">id=</span><span class="s">"myPointCut"</span><span class="nt">/&gt;</span>

<span class="nt">&lt;aop:config&gt;</span>
    <span class="nt">&lt;aop:aspect</span> <span class="na">ref=</span><span class="s">"myPointCut"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;aop:pointcut</span> <span class="na">id=</span><span class="s">"myPointCut02"</span> <span class="na">expression=</span><span class="s">"execution(* com.HB.servlet.method_2.ServletImpl02.*(..))"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;aop:before</span> <span class="na">method=</span><span class="s">"logBefore02"</span> <span class="na">pointcut-ref=</span><span class="s">"myPointCut02"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;aop:after</span> <span class="na">method=</span><span class="s">"logAfter02"</span> <span class="na">pointcut-ref=</span><span class="s">"myPointCut02"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/aop:aspect&gt;</span>
<span class="nt">&lt;/aop:config&gt;</span>
</code></pre></div></div>

<h2 id="method03--annotation">Method03 : Annotation</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Aspect</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AnnotationPointCut</span> <span class="o">{</span>

    <span class="nd">@Before</span><span class="o">(</span><span class="s">"execution(* com.HB.servlet.method_3.ServletImpl03.*(..))"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">logBefore03</span> <span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Log Before ..."</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@After</span><span class="o">(</span><span class="s">"execution(* com.HB.servlet.method_3.ServletImpl03.*(..))"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">logAfter03</span> <span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Log after ..."</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--  method 3  --&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_3.ServletImpl03"</span> <span class="na">id=</span><span class="s">"servletImpl03"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.servlet.method_3.AnnotationPointCut"</span> <span class="na">id=</span><span class="s">"annotationPointCut"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;aop:aspectj-autoproxy/&gt;</span>
</code></pre></div></div>

<h2 id="note">Note:</h2>

<ul>
  <li>在测试时，getBean实际返回的是动态生成的代理对象，需要使用接口承接，不能用实现类的句柄</li>
</ul>
:ET