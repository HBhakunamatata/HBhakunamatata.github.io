I"û&<p>How to learn a new technology:<br />
build environment ‚Äì&gt; write java code ‚Äì&gt; test the result</p>

<h2 id="1what--why-is-mybatis">1.What &amp; why is MyBatis</h2>

<ul>
  <li><a href="https://mybatis.org/mybatis-3/zh/index.html">Website(important)</a></li>
  <li><a href="https://github.com/mybatis/mybatis-3">Github</a></li>
  <li>MyBatis can simplify and automize the code of JDBC.</li>
  <li>MyBatis is a persistence framework
    <ul>
      <li>RAM &lt;‚Äî-&gt; ROM</li>
      <li>ways : IO / JDBC</li>
    </ul>
  </li>
</ul>

<h2 id="2get-strated">2.Get Strated</h2>

<h3 id="1-new-project-with-maven-template">(1) New project with maven template</h3>

<ul>
  <li>add maven dependency</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>org.mybatis<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>mybatis<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>3.5.4<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="c">&lt;!-- add mysql driver --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>mysql<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>mysql-connector-java<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>8.0.20<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<h3 id="2-building-sqlsessionfactory-from-xml-and-getting-the-sqlsession">(2) Building SqlSessionFactory from XML and getting the SqlSession</h3>

<ul>
  <li>MyBatis application &lt;‚Äì SqlSessionFactory &lt;‚Äì SqlSessionFactoryBuilder &lt;‚Äì mybatis-config.xml(important dependencies)</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--Mybatis config file--&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
<span class="c">&lt;!--1.you can make several environment but need to set the default--&gt;</span>
  <span class="nt">&lt;environments</span> <span class="na">default=</span><span class="s">"development"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;environment</span> <span class="na">id=</span><span class="s">"development"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!--2.determining how transactions should be scoped and controlled(TransactionManager)--&gt;</span>
      <span class="nt">&lt;transactionManager</span> <span class="na">type=</span><span class="s">"JDBC"</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!--3.DataSource for acquiring database Connection instances(DataSource)--&gt;</span>
      <span class="nt">&lt;dataSource</span> <span class="na">type=</span><span class="s">"POOLED"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"driver"</span> <span class="na">value=</span><span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"jdbc:mysql://localhost:3306/employees?useSSL=false&amp;amp;useUnicode=true&amp;amp;serverTimezone=UTC&amp;amp;characterEncoding=UTF-8"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">value=</span><span class="s">"root"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">""</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/dataSource&gt;</span>
    <span class="nt">&lt;/environment&gt;</span>
  <span class="nt">&lt;/environments&gt;</span>

<span class="c">&lt;!--(important)register Mapper--&gt;</span>
  <span class="nt">&lt;mappers&gt;</span>
    <span class="c">&lt;!--write the Mapper path according to target --&gt;</span>
    <span class="nt">&lt;mapper</span> <span class="na">resource=</span><span class="s">"com/HB/dao/employeeMapper.xml"</span><span class="nt">&gt;&lt;/mapper&gt;</span>
  <span class="nt">&lt;/mappers&gt;</span>

<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<ul>
  <li>Write a MyBatisUtil.java (the same as DAO.util.java)</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1.Building a SqlSessionFactory instance</span>
<span class="nc">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="s">"mybatis-config.xml"</span><span class="o">;</span>
<span class="nc">InputStream</span> <span class="n">inputStream</span> <span class="o">=</span> <span class="nc">Resources</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">resource</span><span class="o">);</span>
<span class="n">sqlSessionFactory</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SqlSessionFactoryBuilder</span><span class="o">().</span><span class="na">build</span><span class="o">(</span><span class="n">inputStream</span><span class="o">);</span>
</code></pre></div></div>

<h3 id="3-acquiring-a-sqlsession-from-sqlsessionfactory">(3) Acquiring a SqlSession from SqlSessionFactory</h3>

<ul>
  <li>The SqlSession contains absolutely every method needed
 to execute SQL commands against the database.</li>
  <li>The SqlSession is the same as PreparedStatement.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="nc">SqlSession</span> <span class="nf">getSession</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">sqlSessionFactory</span><span class="o">.</span><span class="na">openSession</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="4-coding-after-above">(4) Coding after above</h3>

<ul>
  <li>a. creating POJO</li>
  <li>b. creating Dao interface</li>
  <li>c. transfer the implementation into a xxxxxDao.xml file</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span>
<span class="c">&lt;!--This file can be called 'EmployeeDao.xml'--&gt;</span>
<span class="nt">&lt;mapper</span> <span class="na">namespace=</span><span class="s">"com.HB.dao.EmployeeDao"</span><span class="nt">&gt;</span>  // ÂøÖÈ°ªÂÖ®Âêç
  <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getEmployees"</span> <span class="na">resultType=</span><span class="s">"com.HB.pojo.Employee"</span><span class="nt">&gt;</span>
    select * from employees limit 0, 5
  <span class="nt">&lt;/select&gt;</span>
<span class="nt">&lt;/mapper&gt;</span>
</code></pre></div></div>

<p>###</p>

<ul>
  <li>We have written the .xml file containing a sql statement to perform the implementation of namespace.</li>
  <li>Maybe mapper can take part of the subtype and revoke() the override method execute() the sql statement. By the way, do not forget register the mapper.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">SqlSession</span> <span class="n">sqlSession</span> <span class="o">=</span> <span class="nc">MyBatisUtils</span><span class="o">.</span><span class="na">getSession</span><span class="o">();</span>

<span class="nc">EmployeeDao</span> <span class="n">mapper</span> <span class="o">=</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">getMapper</span><span class="o">(</span><span class="nc">EmployeeDao</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
<span class="nc">List</span><span class="o">&lt;</span><span class="nc">Employee</span><span class="o">&gt;</span> <span class="n">employees</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">getEmployees</span><span class="o">();</span>
</code></pre></div></div>

<h2 id="some-mistakes-important">Some mistakes (important)</h2>

<ul>
  <li>1.The access to the your subtype.xml <strong>must</strong> add <build> setting in pom file.  
//org.apache.ibatis.binding.BindingException: Type interface com.HB.dao.EmployeeDao is not known to the MapperRegistry.</build></li>
  <li>2.Do not forget register mapper of your subtype.xml
    <blockquote>
      <mapper resource="com/HB/dao/employeeMapper.xml"></mapper>
      <p>and  you must use ‚Äò/‚Äô in resource instead of ‚Äò.‚Äô
while</p>
      <mapper namespace="com.HB.dao.EmployeeMapper">
you must use '.'
</mapper>
    </blockquote>
  </li>
  <li>3.All .xml files use <code class="highlighter-rouge">xml&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</code></li>
  <li>4.Take care of the url of mysql 8.0 and the param after ?</li>
</ul>

<h2 id="‰ΩúÁî®Âüüscope-and-life-cycle">‰ΩúÁî®ÂüüÔºàScopeÔºâ and Life Cycle</h2>

<ul>
  <li>https://mybatis.org/mybatis-3/zh/getting-started.html</li>
</ul>

<p>Thanks <a href="https://space.bilibili.com/95256449?spm_id_from=333.788.b_765f7570696e666f.2">QinJiang</a></p>
:ET