I"¥<p>Configuraitons in mybatis-config.xml<br />
<a href="https://mybatis.org/mybatis-3/zh/configuration.html">https://mybatis.org/mybatis-3/zh/configuration.html</a></p>

<h2 id="the-order-of-the-tags">The order of the tags</h2>

<ul>
  <li>The content of element type ‚Äúconfiguration‚Äù must match<br />
‚Äú(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?)‚Äù</li>
</ul>

<h2><environments></environments></h2>

<ul>
  <li>MyBatis can be configured with multiple environments,<br />
 which helps apply your SQL Maps to <strong>multiple databases</strong>.</li>
  <li>Reasons :
    <ul>
      <li>different environments need different databases : Test, Development and Production</li>
      <li>multiple databases share the same SQL Map</li>
    </ul>
  </li>
  <li>Important things to remember:
    <ul>
      <li><strong>While you can configure multiple environments, you can only choose ONE per SqlSessionFactory instance.</strong></li>
      <li><strong>One SqlSessionFactory instance for per database.</strong></li>
      <li>We can load environments and set default environment using ‚Äòid‚Äô.</li>
    </ul>
  </li>
  <li>__<DataSource>__ type : [pooled | unpooled | JNDI]</DataSource></li>
  <li>__<transactionManager>__ : [JDBC | MANAGED]
</transactionManager>    <ul>
      <li>JDBC : This configuration simply makes use of the JDBC commit and rollback facilities directly.</li>
      <li>MANAGED : This configuration simply does almost nothing. It never commits, or rolls back a connection.</li>
    </ul>
  </li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;environments</span> <span class="na">default=</span><span class="s">"development"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;environment</span> <span class="na">id=</span><span class="s">"development"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;transactionManager</span> <span class="na">type=</span><span class="s">"JDBC"</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;dataSource</span> <span class="na">type=</span><span class="s">"POOLED"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"driver"</span> <span class="na">value=</span><span class="s">"${driver}"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"${url}"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">value=</span><span class="s">"${username}"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">"${password}"</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/dataSource&gt;</span>
    <span class="nt">&lt;/environment&gt;</span>
<span class="nt">&lt;/environments&gt;</span>
</code></pre></div></div>

<h2 id="-1"><properties></properties></h2>

<ul>
  <li>It can read in the content in .properties files.</li>
  <li>Note: the setting in the resource is priority of local setting</li>
</ul>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">driver</span><span class="p">=</span><span class="s">com.mysql.cj.jdbc.Driver</span>
<span class="py">url</span><span class="p">=</span><span class="s">jdbc:mysql://localhost:3306/employees?useSSL=false&amp;useUnicode=true&amp;serverTimezone=UTC&amp;characterEncoding=UTF-8</span>
<span class="py">username</span><span class="p">=</span><span class="s">root</span>
<span class="py">password</span><span class="p">=</span><span class="s">********</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;properties</span> <span class="na">resource =</span> <span class="s">"db.properties"</span><span class="nt">/&gt;</span>

<span class="c">&lt;!--import .properties file--&gt;</span>
<span class="nt">&lt;properties</span> <span class="na">resource=</span><span class="s">"db.properties"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!--this setting won't work!--&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">"111111"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/properties&gt;</span>
</code></pre></div></div>

<h2 id="-2"><TypeAliases></TypeAliases></h2>

<ul>
  <li>
    <p>Why typeAliases? : A type alias is simply a shorter name for a Java type.<br />
It‚Äôs only used in the XML configuration to reduce redundant typing of fully classnames.</p>
  </li>
  <li>
    <p>Three ways to use</p>
    <ul>
      <li>(1) xml
  ```xml</li>
    </ul>
    <typeAliases>
      <typeAlias type="com.HB.pojo.Employee" alias="Employee" />
  </typeAliases>
    <p>```</p>
    <ul>
      <li>
        <p>(2) @Alias annotation</p>
      </li>
      <li>
        <p>(3) Default Aliases</p>
      </li>
    </ul>
  </li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getEmployeesById"</span> <span class="na">parameterType=</span><span class="s">"int"</span> <span class="na">resultType=</span><span class="s">"Employee"</span><span class="nt">&gt;</span>
    select * from employees where emp_no = #{emp_no}
  <span class="nt">&lt;/select&gt;</span>
</code></pre></div></div>

<h2 id="mappers">Mappers</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;mappers&gt;</span> (Recommended)
    <span class="nt">&lt;mapper</span> <span class="na">resource=</span><span class="s">"com/HB/dao/employeeMapper.xml"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/mappers&gt;</span>
or
<span class="nt">&lt;mappers&gt;</span>
    <span class="nt">&lt;mapper</span> <span class="na">class=</span><span class="s">"com.HB.dao.EmployeeMapper"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/mappers&gt;</span>
</code></pre></div></div>
<ul>
  <li><strong>Note: In case of MapperRegisterFactory‚Äôs Exception (cannot find mapper)</strong>
    <ul>
      <li>(1) The name of Mapper.xml must be the same as that of interface.</li>
      <li>(2) Mapper.xml and interface must be in the same package</li>
      <li>or mybatis cannot find mapper.xml</li>
    </ul>
  </li>
</ul>

<h2 id="settings">settings</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;settings&gt;</span>
    <span class="nt">&lt;setting</span> <span class="na">name=</span><span class="s">"cacheEnabled"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;setting</span> <span class="na">name=</span><span class="s">"lazyLoadingEnabled"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;setting</span> <span class="na">name=</span><span class="s">"logImpl"</span> <span class="na">value=</span><span class="s">"LOG4J"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/settings&gt;</span>
</code></pre></div></div>

<h2 id="others-">Others ‚Ä¶</h2>

<p>Thanks <a href="https://space.bilibili.com/95256449?spm_id_from=333.788.b_765f7570696e666f.2">QinJiang</a></p>
:ET