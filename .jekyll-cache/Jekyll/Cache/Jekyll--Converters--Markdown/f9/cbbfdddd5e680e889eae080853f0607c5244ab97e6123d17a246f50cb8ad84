I"-<p>Use cache mechanism in MyBatis</p>

<h1 id="cache">Cache</h1>

<h3 id="1-why-use-cache">1. Why use cache?</h3>

<ul>
  <li>Because the connection towards MySQL costs a lot of resources.</li>
  <li>Saving the data in the SRAM can reduce the quantity of connection<br />
and improve the behavior.</li>
</ul>

<h3 id="2-what-kind-of-data-need-storing-in-cache">2. What kind of data need storing in cache?</h3>

<ul>
  <li>The data that be queried much but modified little.</li>
</ul>

<h3 id="3-caches-mechanism-important">3. Caches Mechanism (important)</h3>

<ul>
  <li>get : First query the second level cache, then local cache in sqlsession,<br />
      neither found, execute the sql statement in db.</li>
  <li>put : After querying, put the result in loacl cache.<br />
      When the sqlsession closes, put the local cache into the second level cache.</li>
</ul>

<h3 id="4-when-local-cache-fails">4. When Local Cache fails</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- a. query something that never be queried
- b. insert, update and delete statements will flush the cache
- c. use sqlSession.clearcache();
</code></pre></div></div>

<h3 id="5-how-to-use-the-two-kinds-of-cache">5. How to use the two kinds of cache</h3>

<ul>
  <li>
    <p>By default, just local session caching is enabled that is used to cache data for one session.</p>
  </li>
  <li>
    <p>(1) To enable a global second level of caching</p>
  </li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>In mybatis-config.xml
<span class="nt">&lt;setting</span> <span class="na">name=</span><span class="s">"cacheEnabled"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>

Put into <span class="nt">&lt;mapper&gt;</span> in mapper.xml
<span class="nt">&lt;cache</span> <span class="nt">/&gt;</span>
OR
<span class="nt">&lt;cache</span>
  <span class="na">eviction=</span><span class="s">"FIFO"</span>
  <span class="na">flushInterval=</span><span class="s">"60000"</span>  <span class="err">//</span> <span class="err">ms</span>
  <span class="na">size=</span><span class="s">"512"</span>
  <span class="na">readOnly=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<ul>
  <li>(2) Test and the result</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@org</span><span class="o">.</span><span class="na">junit</span><span class="o">.</span><span class="na">Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">test01</span> <span class="o">()</span> <span class="o">{</span>
    <span class="nc">SqlSession</span> <span class="n">sqlSession1</span> <span class="o">=</span> <span class="nc">MyBatisUtils</span><span class="o">.</span><span class="na">getSqlSession</span><span class="o">();</span>
    <span class="nc">SqlSession</span> <span class="n">sqlSession2</span> <span class="o">=</span> <span class="nc">MyBatisUtils</span><span class="o">.</span><span class="na">getSqlSession</span><span class="o">();</span>

    <span class="nc">EmployeeMapper</span> <span class="n">employeeMapper1</span> <span class="o">=</span> <span class="n">sqlSession1</span><span class="o">.</span><span class="na">getMapper</span><span class="o">(</span><span class="nc">EmployeeMapper</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="c1">//DepartmentMapper departmentMapper = sqlSession.getMapper(DepartmentMapper.class);</span>

    <span class="c1">// Local Cache</span>
    <span class="nc">Employee</span> <span class="n">emp1</span> <span class="o">=</span> <span class="n">employeeMapper1</span><span class="o">.</span><span class="na">getEmp</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">emp1</span><span class="o">);</span>
    <span class="nc">Employee</span> <span class="n">emp2</span> <span class="o">=</span> <span class="n">employeeMapper1</span><span class="o">.</span><span class="na">getEmp</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">emp2</span><span class="o">);</span>

    <span class="c1">// Second Cache</span>
    <span class="n">sqlSession1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>

    <span class="nc">EmployeeMapper</span> <span class="n">employeeMapper2</span> <span class="o">=</span> <span class="n">sqlSession2</span><span class="o">.</span><span class="na">getMapper</span><span class="o">(</span><span class="nc">EmployeeMapper</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="nc">Employee</span> <span class="n">emp3</span> <span class="o">=</span> <span class="n">employeeMapper2</span><span class="o">.</span><span class="na">getEmp</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">emp3</span><span class="o">);</span>

    <span class="n">sqlSession2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<p>result : logger</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Logging initialized using 'class org.apache.ibatis.logging.stdout.StdOutImpl' adapter.
PooledDataSource forcefully closed/removed all connections.
PooledDataSource forcefully closed/removed all connections.
PooledDataSource forcefully closed/removed all connections.
PooledDataSource forcefully closed/removed all connections.
Cache Hit Ratio [com.HB.dao.EmployeeMapper]: 0.0
Opening JDBC Connection
Created connection 1157726741.
Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@45018215]
==&gt;  Preparing: select * from employees where emp_no = ? 
==&gt; Parameters: 1(Integer)
&lt;==    Columns: emp_no, birth_date, first_name, last_name, gender, hire_date
&lt;==        Row: 1, 2020-07-23, Yalong, Sun, M, 2020-07-23
&lt;==      Total: 1
Employee(empNo=1, birthDate=2020-07-23, firstName=Yalong, lastName=Sun, gender=M, hireDate=2020-07-23)
Cache Hit Ratio [com.HB.dao.EmployeeMapper]: 0.0
Employee(empNo=1, birthDate=2020-07-23, firstName=Yalong, lastName=Sun, gender=M, hireDate=2020-07-23)
Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@45018215]
Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@45018215]
Returned connection 1157726741 to pool.
Cache Hit Ratio [com.HB.dao.EmployeeMapper]: 0.3333333333333333
Employee(empNo=1, birthDate=2020-07-23, firstName=Yalong, lastName=Sun, gender=M, hireDate=2020-07-23)

Process finished with exit code 0
</code></pre></div></div>

<h3 id="6-ehcache">6. Ehcache</h3>

<ul>
  <li><a href="http://mybatis.org/ehcache-cache/">Ehcache</a> is a widely used java distributed cache<br />
  for general purpose caching, Java EE and light-weight containers.</li>
  <li>add maven dependency
```xml</li>
</ul>
<dependency>
    <groupId>org.mybatis.caches</groupId>
    <artifactId>mybatis-ehcache</artifactId>
    <version>1.2.1</version>
</dependency>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
- configure wtih ehcache.xml

```xml
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
         updateCheck="false"&gt;
    &lt;!--
       diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：
       user.home – 用户主目录
       user.dir  – 用户当前工作目录
       java.io.tmpdir – 默认临时文件路径
     --&gt;
    &lt;diskStore path="java.io.tmpdir/Tmp_EhCache"/&gt;
    &lt;!--
       defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。
     --&gt;
    &lt;!--
      name:缓存名称。
      maxElementsInMemory:缓存最大数目
      maxElementsOnDisk：硬盘最大缓存个数。
      eternal:对象是否永久有效，一但设置了，timeout将不起作用。
      overflowToDisk:是否保存到磁盘，当系统当机时
      timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。
      timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。
      diskPersistent：是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.
      diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。
      diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。
      memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。
      clearOnFlush：内存数量最大时是否清除。
      memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。
      FIFO，first in first out，这个是大家最熟的，先进先出。
      LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。
      LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
   --&gt;
    &lt;defaultCache
            eternal="false"
            maxElementsInMemory="10000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="1800"
            timeToLiveSeconds="259200"
            memoryStoreEvictionPolicy="LRU"/&gt;

    &lt;cache
            name="cloud_user"
            eternal="false"
            maxElementsInMemory="5000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="1800"
            timeToLiveSeconds="1800"
            memoryStoreEvictionPolicy="LRU"/&gt;

&lt;/ehcache&gt;
</code></pre></div></div>

<p>Thanks <a href="https://space.bilibili.com/95256449?spm_id_from=333.788.b_765f7570696e666f.2">QinJiang</a></p>
:ET