I",4<p>The IoC container implements the inversion of control in Spring, 
and its implementation method is Dependency Injection (DI).</p>

<h2 id="1-constructor-based-dependency-injection">1. Constructor-based Dependency Injection</h2>

<ul>
  <li>Write a User.class with a <strong>args-constructor</strong></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">User</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Non param constructor"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">// Construtor with args</span>
    <span class="kd">public</span> <span class="nf">User</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>(1) name</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.User"</span> <span class="na">id=</span><span class="s">"user01"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;constructor-arg</span> <span class="na">name=</span><span class="s">"name"</span> <span class="na">value=</span><span class="s">"user01"</span><span class="nt">/&gt;</span>
<span class="c">&lt;!--&lt;constructor-arg ref="name" value="value/refId"/&gt;--&gt;</span>
<span class="nt">&lt;/bean&gt;</span>
</code></pre></div></div>

<ul>
  <li>(2) index</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.User"</span> <span class="na">id=</span><span class="s">"user02"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;constructor-arg</span> <span class="na">index=</span><span class="s">"0"</span> <span class="na">value=</span><span class="s">"user02"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/bean&gt;</span>
</code></pre></div></div>

<ul>
  <li>(3) type (no recommended:type duplicated)</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.User"</span> <span class="na">id=</span><span class="s">"user03"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;constructor-arg</span> <span class="na">type=</span><span class="s">"java.lang.String"</span> <span class="na">value=</span><span class="s">"user03"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/bean&gt;</span>
</code></pre></div></div>

<h2 id="2-setter-based-dependency-injection">2. Setter-based Dependency Injection</h2>

<ul>
  <li>Write a class with all kind of fields.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Address</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">address</span><span class="o">;</span>
<span class="o">}</span>

<span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Address</span> <span class="n">address</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="o">[]</span> <span class="n">books</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">pencils</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">homework</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Properties</span> <span class="n">info</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">wife</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">look</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>Write beans.xml for different types :<br />
<strong>[reference / array / list / set / null / map / properties]</strong></li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.Address"</span> <span class="na">id=</span><span class="s">"address"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"address"</span> <span class="na">value=</span><span class="s">"青岛"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/bean&gt;</span>

<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.Student"</span> <span class="na">id=</span><span class="s">"student"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"name"</span> <span class="na">value=</span><span class="s">"HB"</span><span class="nt">/&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"address"</span> <span class="na">ref=</span><span class="s">"address"</span><span class="nt">/&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"books"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;array&gt;</span>
            <span class="nt">&lt;value&gt;</span>三国演义<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>水浒传<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>红楼梦<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>西游记<span class="nt">&lt;/value&gt;</span>
        <span class="nt">&lt;/array&gt;</span>
    <span class="nt">&lt;/property&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"pencils"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;list&gt;</span>
            <span class="nt">&lt;value&gt;</span>red<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>black<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>white<span class="nt">&lt;/value&gt;</span>
        <span class="nt">&lt;/list&gt;</span>
    <span class="nt">&lt;/property&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"homework"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;set&gt;</span>
            <span class="nt">&lt;value&gt;</span>English<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>Chinese<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;value&gt;</span>Art<span class="nt">&lt;/value&gt;</span>
        <span class="nt">&lt;/set&gt;</span>
    <span class="nt">&lt;/property&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"wife"</span> <span class="nt">&gt;</span>
        <span class="nt">&lt;null/&gt;</span>
    <span class="nt">&lt;/property&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"info"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;props&gt;</span>
            <span class="nt">&lt;prop</span> <span class="na">key=</span><span class="s">"ID"</span><span class="nt">&gt;</span>123456<span class="nt">&lt;/prop&gt;</span>
            <span class="nt">&lt;prop</span> <span class="na">key=</span><span class="s">"hua"</span><span class="nt">&gt;</span>jiyi<span class="nt">&lt;/prop&gt;</span>
        <span class="nt">&lt;/props&gt;</span>
    <span class="nt">&lt;/property&gt;</span>

    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"look"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;map&gt;</span>
            <span class="nt">&lt;entry</span> <span class="na">key=</span><span class="s">"AA"</span> <span class="na">value=</span><span class="s">"aa"</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;entry</span> <span class="na">key=</span><span class="s">"DD"</span> <span class="na">value=</span><span class="s">"dd"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/map&gt;</span>
    <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/bean&gt;</span>
</code></pre></div></div>

<h2 id="3-other-two-kinds-of-dependency-injection">3. Other two kinds of Dependency Injection</h2>

<ul>
  <li>(1) add xml binding</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xmlns:p="http://www.springframework.org/schema/p"
xmlns:c="http://www.springframework.org/schema/c"
</code></pre></div></div>

<ul>
  <li>(2) register the beans in beans.xml</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.User"</span> <span class="na">id=</span><span class="s">"user_p"</span> <span class="na">p:name=</span><span class="s">"namewithp"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"com.HB.pojo.User"</span> <span class="na">id=</span><span class="s">"user_c"</span> <span class="na">c:name=</span><span class="s">"namewithc"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<ul>
  <li>(3) Test the result</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">test03</span> <span class="o">()</span> <span class="o">{</span>
    <span class="nc">ApplicationContext</span> <span class="n">context</span> <span class="o">=</span>
            <span class="k">new</span> <span class="nf">ClassPathXmlApplicationContext</span><span class="o">(</span><span class="s">"beans.xml"</span><span class="o">);</span>
    <span class="nc">User</span> <span class="n">namewithp</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="s">"user_p"</span><span class="o">,</span> <span class="nc">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">namewithp</span><span class="o">);</span>
    <span class="nc">User</span> <span class="n">namewithc</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="s">"user_c"</span><span class="o">,</span> <span class="nc">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">namewithc</span><span class="o">);</span>

<span class="o">}</span>
</code></pre></div></div>

<h2 id="note-">Note :</h2>

<ul>
  <li>p and c need xml binding.</li>
  <li>c needs args-consturctor.</li>
  <li>If you do not register a field in bean, they will be <em>null</em>.</li>
  <li>You can import anthor application-context.xml into your application-context.xml
    <blockquote>
      <import resource="beans_extra.xml" />

    </blockquote>
  </li>
</ul>

<p>Thanks <a href="https://space.bilibili.com/95256449?spm_id_from=333.788.b_765f7570696e666f.2">QinJiang</a></p>
:ET